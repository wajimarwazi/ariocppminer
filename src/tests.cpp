#include "miner.h"
#include "updateThread.h"
#include "string_utils.h"
#ifdef _MSC_VER
#include "windows/procinfo_windows.h"
#endif
#include <assert.h>
#include <vector>

using std::string;

#define MORE_TESTS (0)

enum REF_INDEX {
	NONCE = 0,
	PUBLIC_KEY,
	BLOCK,
	DIFFICULTY,
	ARGON,
	HASH,
	DURATION,
	RESULT,
	REF_COUNT
};

extern bool s_run;

HashReference::HashReference(const char* _argon2i, const char* _finalHash, const char* _duration, const char* _result) :
	argon2i(_argon2i), finalHash(_finalHash), duration(_duration), result(_result)
{
	assert(argon2i.size() > 0);
	assert(finalHash.size() == (64 * 2));
	assert(duration.size() > 0);
	assert(result.size() > 0);
}

std::string HashReference::getSaltBase64() const
{
	auto parts = split(argon2i, '$');
	assert(parts.size() == 6);
	assert(parts[4].size() > 0);
	return parts[4];
}

const std::vector<std::vector<std::string>> REFS = {
	{ "YYEETiqrzrmgIApJlA3WKfuYPdSQI4F3U04GirBhA", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$MEtWd3NOcjZ5VDQydURYOQ$PcDO3FdgIOpEI2aQa3oMrwVyHqqyo34QwYQHIvKlqAU", "5d644b389caf82c5550269c965915431ce99e97af8eb9d956651cb198fcd8740203a8a2718f7d389e10411389b3efadb4fb2082582b11706ff27214f534c9fd2", "1054924814964225626", "34259639773" },
	{ "m4NDPLtbk8hygre9V5sL8pFEj4Hs15Lvg5EVg9sX2X4", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$WUxSM3VqZThaVTJNNElZeA$L6XCKCH2qPqPOapmU5UnM8WmXlWjBTzhULj4OKp9t14", "78894e655108097c075ad03e44d1e3766ee16defa40f11d4ac0f4d1a5dd1d74a8ad38b5e08aa95535f6403b1e95657c63ac03cdf355aae6062c20b21fff93a84", "20811816421274958696", "675882606523" },
	{ "SK1hXvlrTVZotUA0rJ4DHUm4epwhGgRIt6vJjudQewg", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "2KKMi9hVv4n4NuLW3hjaAns1tU9WY6rZXGadeYdCNbjNQ76UgHaejYrQmcDyTnnShk1ea9m9Y8G2G6jLr1rDL93z", "37427937", "$argon2i$v=19$m=524288,t=1,p=1$YkJPTmhZR2pqeC5yblJGcw$Aj8AcjTy+glXNZhRo5qQpHnRWwJ0QDBbDxxER7NsdUY", "50bc197c031934b3119ab6510678bc441fea20404a878bf4783d0ab73cd28340b8d12fbe90ed22f1d5f11299aa90f11d694348a188cbde8f07f8fdca5253bb43", "182687424464213144143", "4881044457892" },
	{ "mM1W6QEgb0mu8eE7axkb6HLyNyV9tpJoxG02miZ08fc", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "2KKMi9hVv4n4NuLW3hjaAns1tU9WY6rZXGadeYdCNbjNQ76UgHaejYrQmcDyTnnShk1ea9m9Y8G2G6jLr1rDL93z", "37427937", "$argon2i$v=19$m=524288,t=1,p=1$UHZJUTNqV2lZNUNxS2ZiWQ$LqaYvrXF6EJIKJWytRzHjwMDmoTD7qnldW4qMv8+d+8", "027a62bac2c7a844417681155589f0181eea95a624e5de2e3f211097737c96198b134187671b3eee08b5afc28c1e4d33c3bec938182a0f15b26b9f7276e740fd", "1292436462583021", "34531330" },
#if MORE_TESTS
	{ "b7QN8yGwDSqbkFGY63HSB6lSgnsmV5VFyxd5lhnL8", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$NWNoUnRmWXVPZlh5bnB6RQ$c0I+gT++C6FP2ABEMoyIBB/sfW8wSrbJ4VEGIlm6Zwk", "09481ddad2fd86a77c8a00c0fcc5746002a3e59699585e12f979c64e61bb0d312da5fd5e7007c6d255a9fcd87addc242dde33fc4a14d87656443e27395486891", "96153184985221101", "3122661856" },
	{ "XBuzr8WEvciEBkdOQiCcb5AN63NEhWb8klHSTHhdi3E", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$OXR1U3hnYnRWL3Z5LkF5eg$LC1QbNL3P4dRvz9N27TDcEAqcfJaF+5HftnHwUCCcig", "6a10900f51fa15e74424af971b1a5cb04e0d84c8dd4a989b4d9d64192c1d6d4bbef5beceec137d1f8b4182caec3fa1628a2a408bdcc737f44138d2044cc5c67f", "1751762211557513963244", "56890065989012" },
	{ "uUK9s1eylwVjsK2HAhhvxNsiF6y16OkqVSTebEgj4r4", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$L3I3NzV5am52cWtScnYwMQ$MTazTlAJTtiPfL8psgvNt/QNCT29ITFsThtSWy/t+3o", "f6b3b0716609c11898a18ce7347a874240b31415de01e744c21f5430f1dc130eb406430fb292aa719ad6a96719e11de7fd4c1abe1453b9a8f7844a176d2fd3f1", "140662226814154225168", "4568133341855" },
	{ "UsdMsvf8a5xMVtUid5w64KqWjLEkENHqhHuMDS3qnvM", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$b3VULmNPMkUzZW4xWkF0eg$4pC+wBlKHnfwO18Mwci7NUJKTemgPJeIjq4KIKss6rE", "6bae5bf347f30d79dc57fb7b3d355b49440ce1f301b0b228b3f833dab2896400c995daf390e45348e71cd6a668f5845b05cd39ea4c3f165ef352b189d05b99d1", "25173140023124594", "817520544" },
	{ "2pBZ6c29gTEnffzyOcOcPtY9obauKF5TRPe4AvZ13E4", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$eGVZancxUUF0SzFBMGVSbg$mhq2wKyLDxNjtIMDOY2vfncpdUHK6AxXLQ9I9IU1xIE", "e1cedefc193e7a608a5aaaa9d373e77006c7cebe75b80909342d21a321b179177311f2761ba6706a3c6ae533ca7096ffe4ca101e318524a878ac198af6175593", "17011211792360112168", "552454525526" },
	{ "Tk01lxcQKuvIAVWvFflvYH7AO84em47DExUj47DR5A", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$UUxyNmdrYi5PaWc5UmtHZg$f80+L77OZL2BA3WoIf+SWg/ciFI5VAEaPj1dazg9CJo", "193c5c8405bf160b3f368e19211003874b7dc568a69ba64d874feeb024dda4dc7a83159da58ef2212e2d01803a703034ba43a4588fba4b53fb7189afcc8960bf", "142135166772204611283", "4615968402378" },
	{ "28bDUFBrPiinafACpL2tFHaZYeHMfWc8p1XaGkRpG0", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$MTQ3SmkxaGtCWEFySzAzWA$Mc+/kr2zfG+tisxIIEC7P4jp8fR5YMEL0Pdh21sGhqY", "b576af528356843f647a3894d2cff1a57892ce8d1de361060cef0c982635fb1361eb170694bf4e09fe93fc98823ffaffc6df26dfdf5216461fba1c9b205e6153", "56165296192546370", "1824018913" },
	{ "V0vhbtX3SlFxNO1ULnT3iqFu3rmVDaAH0FyZrUHs", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$QktKY3JwenBUU1l3V0xhUQ$tHSJdpgCpHoYVm5z98Cx9PEWtOIC7eD3V7WDDL9UpFc", "35fed41fdf4c824b11371a923a1d9c935c7e935cfa7e564973301ed8d035df9b9b31421d884ba2cb5a567b46a1552643b1880d8460e16442087c7cd82b0b2233", "2614725073155908566", "84915567291" },
	{ "puhW21Auy1PUkzWPj1iK95IkWPfN5OOynvFgNFkLU0", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$Nm9NNVBTM3lzdlU0U3k1YQ$5UOZztwfK3EHzTQHR8OLY/iAJZWYEdOeO6xoSWRcJ/U", "fc67fe791059696d93076f00e57331122da8352f7751db895596f9ea8c6e07fcb68a0ccbcaf9a44558173839dc7bb04ad36e92e67ce10f84305a0db4094a6d3c", "1111811913725288123132", "36107099880277" },
	{ "TG1vXKa2C3NprujhEaUVlYuA3ftw8ur8rt1mlWXf66k", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$UFI4aDdXcmJJbG5ZS1dYaA$3fJtK7171AsIf+EfP+v09evreWUb8rss8qFQQPh6Tis", "e00b44b4d8fbddd0d397e18f45ac8c5e7f7eda5da80ba2563b43586244c8b90cad923c6bf39f97874ab2a80f9c2c359a50b6c89f7d94cce67f267c08ad0ecfa5", "2259416886127444230", "73376611791" },
	{ "Tdua906EWVTa58NSR4wdn8IpP9jOyPDzvf0fI9A68c", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$dmZpUlRna0NKVHJ6M2xmNg$nDI5D4aJR3wngA7kJxm9JJ2DnJHl2pxW+mNFRCltAlk", "393a2beaa93ba22f51db06f191ecca3b436eaec75fac79850e5879c3ec1afb75c92a40a05f6d1163decac828356353ec92ab3b12d64d3269f6e9c8ac2988bc02", "6599513311722299105", "214325177996" },
	{ "nmC9elUBNgnzxYivgyEptOr0kNyjtveG9xnjg52MmM", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$UWdXZnIydnZPcS5FamZxaw$his2FWbdgCcxNZI9/C7vWPh6KtVFqaQ4EWt0FvZ+xgA", "1d8938a4006980406e9cddd87fa455a133d4b0a9f156dc637ba72192d0f6a48fa7d724c218f05db71720fc1b470f1bec91c841a0019815c84988a18f4b714fa0", "221161241991432315200", "7182411841112" },
	{ "HCX073Pl4XrOAtETelXYUQwj2BnpFFgUwYieQGXvU", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$MUgyelRCRGQzVUJLQnh0eQ$xdl3oeOB9kdGmoWd52MtaTxt1mLVIGlB9Eozg9DhV+o", "afbf67dfb94a42397d81e726de33772ee970961a84f051f76fd30f2d7fb43539accb379f209edbdc37d5370bec595c74ef3e2cb5ebf53ac2df3da93f43934cdf", "23146132247575589194", "751691629301" },
	{ "zaGxBYVUH1KQKpOWPQKIBLlF8kn3LvUusSep6sfg", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "KwkMnGF1qJeFh9nwZPTf3x86TmVF1RJaCPwfpKePVsAimJKTzA8H2ndx3FaRu7K54Md36yTcYKLaQtQNzRX4tAg", "30792058", "$argon2i$v=19$m=524288,t=1,p=1$WGxHUWxiUGVGNEVKL3RUOQ$j9nJDJ2ulk4WDeyYNsaaH89XS5tEu9W06GQ1L57nvLw", "4f4db93cb21adcdf73ff1628b01429ebb751c490c4e602a47c2b6233d6825f5146efacc593638805200f30343417e90dd8263aae99a0bb6d01946f428268e05a", "22235196164813223109", "722108154148" },
	{ "Dv6D1kFw6jCX4MbGwHRo7Zy8TTq22UUlrSg2s5AMKY", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "2KKMi9hVv4n4NuLW3hjaAns1tU9WY6rZXGadeYdCNbjNQ76UgHaejYrQmcDyTnnShk1ea9m9Y8G2G6jLr1rDL93z", "37427937", "$argon2i$v=19$m=524288,t=1,p=1$QmRTMHE2UlFLSUl4NnFzNg$ah8jIC0Q13auG9QqdEGxpo/HvoRu2SVW7etxykj8Gyw", "66ecf1748a7242cb324ecdd4c4c87a1fe41ae84f564f1497711010b806b6a3525151d7383ce76ddbe60a3ff7c12d3a4fd4f59350fc55c3ec62f14212ed6f6832", "20531861518223045236", "548570484080" },
	{ "FH87ON2JdmC5ax0rW1WxDEsDvUwaszCvE5BbawQpNh0", "PZ8Tyr4Nx8MHsRAGMpZmZ6TWY63dXWSCy7AEg3h9oYjeR74yj73q3gPxbxq9R3nxSSUV4KKgu1sQZu9Qj9v2q2HhT5H3LTHwW7HzAA28SjWFdzkNoovBMncD", "2KKMi9hVv4n4NuLW3hjaAns1tU9WY6rZXGadeYdCNbjNQ76UgHaejYrQmcDyTnnShk1ea9m9Y8G2G6jLr1rDL93z", "37427937", "$argon2i$v=19$m=524288,t=1,p=1$RE92QzBuaWpNaXpidVIzbw$bTN+SzwuqDVPNqIX7S8OxW3IkWqNhzDzOMFva26eHrk", "1aaa530c69feda4d048cb2aad9c1ec265618318bdc16938711c9682641780060934d9081707fd6e191cacbbe39af0068268b7b636c055b0326b2f800f8849dc6", "17838220135961451753", "476601746336" },
#endif
};

bool testHasher(std::string &testsLog) 
{
	assert(REFS[0].size() == REF_COUNT);

	int cur = 0;
	for (const auto &ref : REFS) {
		HashReference hashRef(ref[ARGON].c_str(), ref[HASH].c_str(), ref[DURATION].c_str(), ref[RESULT].c_str());
		HashParams hashPrms;
		hashPrms.nonce = ref[NONCE];
		hashPrms.publicKey = ref[PUBLIC_KEY];
		hashPrms.block = ref[BLOCK];
		hashPrms.difficulty = ref[DIFFICULTY];
		hashPrms.pRef = &hashRef;
		mpz_t mpzResult;
		
		hash(hashPrms, mpzResult);
		mpz_t mpzZero;
		mpz_init(mpzZero);
		if (mpz_cmp(mpzResult, mpzZero) == 0) {
			return false;
		}
		if (!s_run) {
			testsLog = "Error: local hash test failed, probably a hardware/lib issue...";
			return true;
		}
	}
	testsLog = "Hashing tests ok";
	return true;
}

bool testSubmit(std::string &testsLog) 
{
	HashParams curParams;

	// wait for valid node params
	while (curParams.height == 0) {
		curParams = currentHashParams();
	}

	// do one mining iteration, enabling compareResultToNode
	mpz_t mpzMyResult;
	makeNonce(curParams.nonce);
	curParams.compareResultToNode = true;
	bool ok = hash(curParams, mpzMyResult);

	if (!ok) {
		testsLog = " => pool might be down, or less than 20s between successive launches";
	}
	else {
		testsLog = "Submit test ok";
	}

	return ok;
}